{"version":3,"sources":["store/api.js","store/users.js","store/patients.js","store/entities.js","store/reducer.js","store/middleware/toast.js","store/middleware/api.js","components/navigation.jsx","services/authService.js","components/notification.jsx","components/navBar.jsx","components/registerForm.jsx","components/loginForm.jsx","style.js","components/tableUsers.jsx","components/login.jsx","components/homePageDescription.jsx","components/homePage.jsx","components/logout.jsx","components/404page.jsx","components/patientsTable.jsx","components/addPatient.jsx","components/colegues.jsx","components/archive.jsx","components/note.jsx","components/patientNotes.jsx","components/patientCardInfo.jsx","components/patientCard.jsx","components/dischargingLetter.jsx","components/letterToPDF.jsx","components/letterPreview.jsx","components/protectedRoute.jsx","App.js","store/configureStore.js","serviceWorker.js","index.js"],"names":["apiCallBegan","createAction","apiCallSuccess","apiCallFailed","slice","createSlice","name","initialState","list","loading","lastFetch","reducers","usersRequested","users","action","usersReceived","payload","Date","now","usersRequestFailed","userAdded","push","userChangeEmail","id","email","index","findIndex","user","userChangePassword","console","log","userRemoved","splice","actions","patientsRequested","patients","patientsReceived","patientsRequestFailed","patientAdded","patientDischargingLettterAdded","discharging","patient","letterApprovedByHeadNurce","letterApprovedBySurgeon","patientDischarged","discharged","toast","success","first","error","patientRemoved","combineReducers","createSelector","state","entities","bugs","projects","filter","bug","resolved","usersReducer","patientsReducer","entitiesReducer","store","next","type","message","api","dispatch","a","url","method","data","onStart","onSuccess","onError","axios","request","baseURL","process","response","Navigation","Fragment","className","to","Component","authService","password","post","result","localStorage","setItem","window","location","replace","getUser","token","getItem","jwt_decode","$","document","ready","popover","trigger","html","Notifications","useSelector","readyForDischarge","letterApproved","patientsWaitingLetterApprovalHeadNurce","dischargeLetter","inProcess","letter","headNurseApproved","patientsWaitingLetterApprovalSurgeon","surgeonApproved","popoverContentNurce","map","title","last","popoverContentHeadNurce","popoverContentSurgeon","accessLevel","style","borderRadius","data-triger","data-toggle","data-placement","data-content","join","fontSize","icon","faBell","length","position","left","NavBar","username","faUserMd","data-target","aria-controls","aria-expanded","aria-label","marginLeft","login","charAt","toUpperCase","RegisterForm","padding","htmlFor","aria-describedby","placeholder","onClick","e","preventDefault","LoginForm","onSubmit","onChange","currentTarget","value","setState","this","override","css","tooltip","TableUsers","onCoppy","scope","key","href","picture","large","src","alt","jobTitle","text","textAlign","size","color","Login","HomePageDescription","ReactImageAppear","maxWidth","faGithub","faReact","HomePage","Logout","removeItem","NoMatch","PatientsTable","useDispatch","patientsInHouse","onDischarge","dischargePatient","dob","age","gender","AddPatient","role","Colegues","colegues","colegue","Archive","dischargedPatients","Note","note","body","props","uuid","cols","rows","PatientNotes","notes","aria-multiselectable","data-parent","aria-labelledby","addedBy","PatientCardInfo","street","number","city","country","postcode","PatientCard","match","params","minWidth","width","DischargingLetter","patientName","date","createdBy","signedBy","submitLetter","addDischargingLetter","history","approveLetter","values","headNurceApprove","surgeonApprove","find","getUTCDate","getUTCMonth","getUTCFullYear","fontWeight","defaultValue","autoFocus","connect","styles","StyleSheet","create","page","backgroundColor","heading","marginTop","marginBottom","headingText","margin","mainText","borderTop","borderBottom","flexGrow","footerText","marginRight","LetterToPdf","sectionTop","DownloadPDFLetter","fileName","LetterPreview","renderDownloadFile","disabled","ProtectedRoute","component","render","rest","configureStore","reducer","middleware","getDefaultMiddleware","App","getState","moment","diff","setInterval","diffInMinutes","get","_","isEqual","transition","Zoom","path","exact","Boolean","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.b5f55f2a.chunk.js","sourcesContent":["import { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const apiCallBegan = createAction(\"api/callBegan\");\r\nexport const apiCallSuccess = createAction(\"api/callSuccess\");\r\nexport const apiCallFailed = createAction(\"api/callFailed\");\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"./api\";\r\nimport moment from \"moment\";\r\n\r\nconst slice = createSlice({\r\n  name: \"users\",\r\n  initialState: {\r\n    list: [],\r\n    loading: true,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    usersRequested: (users, action) => {\r\n      users.loading = true;\r\n    },\r\n\r\n    usersReceived: (users, action) => {\r\n      users.list = action.payload;\r\n      users.loading = false;\r\n      users.lastFetch = Date.now();\r\n    },\r\n\r\n    usersRequestFailed: (users, action) => {\r\n      users.loading = false;\r\n    },\r\n\r\n    userAdded: (users, action) => {\r\n      users.list.push(action.payload);\r\n    },\r\n\r\n    userChangeEmail: (users, action) => {\r\n      const { id, email } = action.payload;\r\n      const index = users.list.findIndex((user) => user.id === id);\r\n      if (index > -1) {\r\n        users.list[index].email = email;\r\n      }\r\n    },\r\n\r\n    userChangePassword: (users, action) => {\r\n      //Toast notification \"Password was changed successfuly!\"\r\n      console.log(`The password was changed: ${action.payload}`);\r\n    },\r\n\r\n    userRemoved: (users, action) => {\r\n      const index = users.list.findIndex(\r\n        (user) => user.id === action.payload.id\r\n      );\r\n      if (index > -1) {\r\n        users.list.splice(index, 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  usersRequested,\r\n  usersReceived,\r\n  usersRequestFailed,\r\n  userAdded,\r\n  userChangeEmail,\r\n  userChangePassword,\r\n  userRemoved,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/users\";\r\n\r\nexport const loadUsers = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.users;\r\n\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10) return;\r\n\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url,\r\n      onStart: usersRequested.type,\r\n      onSuccess: usersReceived.type,\r\n      onError: usersRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addUser = (user) =>\r\n  apiCallBegan({\r\n    url,\r\n    method: \"post\",\r\n    data: user,\r\n    onSuccess: userAdded.type,\r\n  });\r\n\r\nexport const removeUser = (id) =>\r\n  apiCallBegan({\r\n    url: url + \"/\" + id,\r\n    method: \"delete\",\r\n    onSuccess: userRemoved.type,\r\n  });\r\n\r\nexport const changeUserEmail = (id, email) =>\r\n  apiCallBegan({\r\n    url: `${url}/${id}/email`,\r\n    method: \"patch\",\r\n    data: { email },\r\n    onSuccess: userChangeEmail.type,\r\n  });\r\n\r\nexport const changeUserPassword = (id, password) =>\r\n  apiCallBegan({\r\n    url: `${url}/${id}/password`,\r\n    method: \"patch\",\r\n    data: { password },\r\n    onSuccess: userChangePassword.type,\r\n  });\r\n\r\n// Selector\r\n\r\n// Memoization\r\n// bugs => get unresolved bugs from the cache\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { createSelector } from \"reselect\";\r\nimport { apiCallBegan } from \"./api\";\r\nimport moment from \"moment\";\r\nimport axios from \"axios\";\r\nimport _ from \"lodash\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst slice = createSlice({\r\n  name: \"patients\",\r\n  initialState: {\r\n    list: [],\r\n    loading: true,\r\n    lastFetch: null,\r\n  },\r\n  reducers: {\r\n    patientsRequested: (patients, action) => {\r\n      patients.loading = true;\r\n    },\r\n\r\n    patientsReceived: (patients, action) => {\r\n      patients.list = action.payload;\r\n      patients.loading = false;\r\n      patients.lastFetch = Date.now();\r\n    },\r\n\r\n    patientsRequestFailed: (patients, action) => {\r\n      patients.loading = false;\r\n    },\r\n\r\n    patientAdded: (patients, action) => {\r\n      patients.list.push(action.payload);\r\n    },\r\n\r\n    patientDischargingLettterAdded: (patients, action) => {\r\n      const { id, discharging } = action.payload;\r\n      const index = patients.list.findIndex((patient) => patient.id === id);\r\n      if (index > -1) {\r\n        patients.list[index].discharging = discharging;\r\n      }\r\n    },\r\n\r\n    letterApprovedByHeadNurce: (patients, action) => {\r\n      const { id, discharging } = action.payload;\r\n      const index = patients.list.findIndex((patient) => patient.id === id);\r\n      if (index > -1) {\r\n        patients.list[index].discharging = discharging;\r\n      }\r\n    },\r\n\r\n    letterApprovedBySurgeon: (patients, action) => {\r\n      const { id, discharging } = action.payload;\r\n      const index = patients.list.findIndex((patient) => patient.id === id);\r\n      if (index > -1) {\r\n        patients.list[index].discharging = discharging;\r\n      }\r\n    },\r\n\r\n    patientDischarged: (patients, action) => {\r\n      const index = patients.list.findIndex(\r\n        (patient) => patient.id === action.payload.id\r\n      );\r\n      if (index > -1) {\r\n        patients.list[index].discharging.discharged = true;\r\n        toast.success(`Patient ${patients.list[index].name.first} was \r\n        discharged successfully`);\r\n      } else\r\n        toast.error(\r\n          \"Ups, are you sude that you didn't discharge this patient already?\"\r\n        );\r\n    },\r\n\r\n    patientRemoved: (patients, action) => {\r\n      const index = patients.list.findIndex(\r\n        (patient) => patient.id === action.payload.id\r\n      );\r\n      if (index > -1) {\r\n        patients.list.splice(index, 1);\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  patientsRequested,\r\n  patientsReceived,\r\n  patientsRequestFailed,\r\n  patientAdded,\r\n  patientDischargingLettterAdded,\r\n  letterApprovedByHeadNurce,\r\n  letterApprovedBySurgeon,\r\n  patientDischarged,\r\n  patientRemoved,\r\n} = slice.actions;\r\nexport default slice.reducer;\r\n\r\n// Action Creators\r\nconst url = \"/patients\";\r\n\r\nexport const loadPatients = () => (dispatch, getState) => {\r\n  const { lastFetch } = getState().entities.patients;\r\n\r\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\r\n  if (diffInMinutes < 10)\r\n    return dispatch(async () => {\r\n      const result = await axios.get(\"http://localhost:9002/api\" + url);\r\n      const patients = getState().entities.patients.list;\r\n      if (!_.isEqual(patients, result.data)) {\r\n        dispatch(\r\n          apiCallBegan({\r\n            url,\r\n            onStart: patientsRequested.type,\r\n            onSuccess: patientsReceived.type,\r\n            onError: patientsRequestFailed.type,\r\n          })\r\n        );\r\n      }\r\n    });\r\n  return dispatch(\r\n    apiCallBegan({\r\n      url,\r\n      onStart: patientsRequested.type,\r\n      onSuccess: patientsReceived.type,\r\n      onError: patientsRequestFailed.type,\r\n    })\r\n  );\r\n};\r\n\r\nexport const addPatient = (patient) =>\r\n  apiCallBegan({\r\n    url,\r\n    method: \"post\",\r\n    data: patient,\r\n    onSuccess: patientAdded.type,\r\n  });\r\n\r\nexport const addDischargingLetter = (id, discharging) =>\r\n  apiCallBegan({\r\n    url: url + \"/\" + id,\r\n    method: \"put\",\r\n    data: { discharging },\r\n    onSuccess: patientDischargingLettterAdded.type,\r\n  });\r\n\r\nexport const headNurceApprove = (id, discharging, signedBy) =>\r\n  apiCallBegan({\r\n    url: `${url}/${id}/headNurseApproved`,\r\n    method: \"patch\",\r\n    data: { discharging, signedBy },\r\n    onSuccess: letterApprovedByHeadNurce.type,\r\n  });\r\n\r\nexport const surgeonApprove = (id, discharging, signedBy) =>\r\n  apiCallBegan({\r\n    url: `${url}/${id}/surgeonApproved`,\r\n    method: \"patch\",\r\n    data: { discharging, signedBy },\r\n    onSuccess: letterApprovedBySurgeon.type,\r\n  });\r\n\r\nexport const dischargePatient = (id) =>\r\n  apiCallBegan({\r\n    url: `${url}/${id}/discharge`,\r\n    method: \"patch\",\r\n    onSuccess: patientDischarged.type,\r\n  });\r\n\r\nexport const removePatient = (id) =>\r\n  apiCallBegan({\r\n    url: url + \"/\" + id,\r\n    method: \"delete\",\r\n    onSuccess: patientRemoved.type,\r\n  });\r\n\r\n// Selector\r\n\r\n// Memoization\r\n// bugs => get unresolved bugs from the cache\r\n\r\nexport const getBugsByUser = (userId) =>\r\n  createSelector(\r\n    (state) => state.entities.bugs,\r\n    (bugs) => bugs.filter((bug) => bug.userId === userId)\r\n  );\r\n\r\nexport const getUnresolvedBugs = createSelector(\r\n  (state) => state.entities.bugs,\r\n  (state) => state.entities.projects,\r\n  (bugs, projects) => bugs.list.filter((bug) => !bug.resolved)\r\n);\r\n","import { combineReducers } from \"redux\";\r\nimport usersReducer from \"./users\";\r\nimport patientsReducer from \"./patients\";\r\n\r\nexport default combineReducers({\r\n  users: usersReducer,\r\n  patients: patientsReducer,\r\n});\r\n","import { combineReducers } from \"redux\";\r\nimport entitiesReducer from \"./entities\";\r\n\r\nexport default combineReducers({\r\n  entities: entitiesReducer\r\n});\r\n","const toast = store => next => action => {\r\n  if (action.type === \"error\") console.log(\"Toastify\", action.payload.message);\r\n  else return next(action);\r\n};\r\n\r\nexport default toast;\r\n","import axios from \"axios\";\r\nimport * as actions from \"../api\";\r\n\r\nconst {REACT_APP_APIURL: baseURL} = process.env;\r\n\r\nconst api = ({ dispatch }) => (next) => async (action) => {\r\n  if (action.type !== actions.apiCallBegan.type) return next(action);\r\n\r\n  const { url, method, data, onStart, onSuccess, onError } = action.payload;\r\n\r\n  if (onStart) dispatch({ type: onStart });\r\n\r\n  next(action);\r\n\r\n  try {\r\n    const response = await axios.request({\r\n      baseURL,\r\n      url,\r\n      method,\r\n      data,\r\n    });\r\n    // General\r\n    dispatch(actions.apiCallSuccess(response.data));\r\n    // Specific\r\n    if (onSuccess) dispatch({ type: onSuccess, payload: response.data });\r\n  } catch (error) {\r\n    // General\r\n    dispatch(actions.apiCallFailed(error.message));\r\n    // Specific\r\n    if (onError) dispatch({ type: onError, payload: error.message });\r\n  }\r\n};\r\n\r\nexport default api;\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nclass Navigation extends Component {\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"list-group\">\r\n          <NavLink\r\n            to=\"/patients\"\r\n            type=\"button\"\r\n            className=\"list-group-item list-group-item-action \"\r\n          >\r\n            Patients\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/colegues\"\r\n            type=\"button\"\r\n            className=\"list-group-item list-group-item-action \"\r\n          >\r\n            Colegues\r\n          </NavLink>\r\n\r\n          <NavLink\r\n            to=\"/archive\"\r\n            type=\"button\"\r\n            className=\"list-group-item list-group-item-action \"\r\n          >\r\n            Archive\r\n          </NavLink>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import { toast } from \"react-toastify\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport axios from \"axios\";\r\n\r\nconst {REACT_APP_APIURL: baseURL} = process.env;\r\nconsole.log(baseURL)\r\n\r\nexport const authService = async ({ email, password }) => {\r\n  try {\r\n    const result = await axios.post(baseURL + \"/auth\", {\r\n      email,\r\n      password,\r\n    });\r\n    localStorage.setItem(\"jwt\", result.data);\r\n    window.location.replace(\"/patients\");\r\n  } catch (error) {\r\n    toast.error(\"User not found!\");\r\n  }\r\n};\r\n\r\nexport const getUser = () => {\r\n  const getToken = () => localStorage.getItem(\"jwt\");\r\n  const token = getToken();\r\n  if (token) {\r\n    return jwt_decode(token);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBell } from \"@fortawesome/free-regular-svg-icons\";\r\nimport $ from \"jquery\";\r\nimport { getUser } from \"../services/authService\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\n$(document).ready(function () {\r\n  $('[data-toggle=\"popover\"]').popover({\r\n    trigger: \"focus\",\r\n    html: true,\r\n  });\r\n});\r\n\r\nconst Notifications = () => {\r\n  //Getting the patients\r\n  const patients = useSelector((state) => state.entities.patients.list);\r\n\r\n  //Getting the user\r\n  const user = getUser();\r\n\r\n  //Getting ready for discharge patients\r\n  const readyForDischarge = patients.filter(\r\n    (patient) =>\r\n      patient.discharging.letterApproved &&\r\n      patient.discharging.discharged === false\r\n  );\r\n\r\n  //Getting patients that waiting for discharging letter approval from head nurce\r\n  const patientsWaitingLetterApprovalHeadNurce = patients.filter(\r\n    (patient) =>\r\n      patient.discharging.dischargeLetter &&\r\n      patient.discharging.inProcess &&\r\n      !patient.discharging.letter.headNurseApproved\r\n  );\r\n\r\n  //Getting patinets that waiting for discharging letter approval from surgeon\r\n  const patientsWaitingLetterApprovalSurgeon = patients.filter(\r\n    (patient) =>\r\n      patient.discharging.dischargeLetter &&\r\n      patient.discharging.inProcess &&\r\n      patient.discharging.letter.headNurseApproved &&\r\n      !patient.discharging.letter.surgeonApproved\r\n  );\r\n\r\n  const popoverContentNurce = readyForDischarge.map((patient) => {\r\n    return `<div key=${patient.id} class=\"bg-success text-light border p-1 mt-2\"><strong>${patient.name.title} ${patient.name.first} ${patient.name.last}</strong> is ready for disharging!</div>`;\r\n  });\r\n\r\n  const popoverContentHeadNurce = patientsWaitingLetterApprovalHeadNurce.map(\r\n    (patient) => {\r\n      return `<div key=${patient.id} class=\"bg-success text-light border p-1 mt-2\"><strong>${patient.name.title} ${patient.name.first} ${patient.name.last}</strong> discharging letter waiting for approval!</div>`;\r\n    }\r\n  );\r\n\r\n  const popoverContentSurgeon = patientsWaitingLetterApprovalSurgeon.map(\r\n    (patient) => {\r\n      return `<div key=${patient.id} class=\"bg-success text-light border p-1 mt-2\"><strong>${patient.name.title} ${patient.name.first} ${patient.name.last}</strong> discharging letter waiting for approval!</div>`;\r\n    }\r\n  );\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {/* Notifications for Nurces */}\r\n      {user && user.accessLevel < 2 && (\r\n        <button\r\n          style={{ borderRadius: 50 }}\r\n          className=\"btn mt-3\"\r\n          data-triger=\"focus\"\r\n          data-toggle=\"popover\"\r\n          data-placement=\"bottom\"\r\n          title=\"Notifications\"\r\n          data-content={popoverContentNurce.join(\"\")}\r\n        >\r\n          <FontAwesomeIcon style={{ fontSize: 35 }} icon={faBell} />\r\n          {readyForDischarge.length > 0 && (\r\n            <span\r\n              style={{ position: \"relative\", left: \"-8px\" }}\r\n              className=\"badge badge-pill badge-danger\"\r\n            >\r\n              {readyForDischarge.length}\r\n            </span>\r\n          )}\r\n        </button>\r\n      )}\r\n      {/* Notifications for Head Nurse */}\r\n      {user && user.accessLevel === 2 && (\r\n        <button\r\n          style={{ borderRadius: 50 }}\r\n          className=\"btn mt-3\"\r\n          data-triger=\"focus\"\r\n          data-toggle=\"popover\"\r\n          data-placement=\"bottom\"\r\n          title=\"Notifications\"\r\n          data-content={popoverContentHeadNurce.join(\"\")}\r\n        >\r\n          <FontAwesomeIcon style={{ fontSize: 35 }} icon={faBell} />\r\n          {patientsWaitingLetterApprovalHeadNurce.length > 0 && (\r\n            <span\r\n              style={{ position: \"relative\", left: \"-8px\" }}\r\n              className=\"badge badge-pill badge-danger\"\r\n            >\r\n              {patientsWaitingLetterApprovalHeadNurce.length}\r\n            </span>\r\n          )}\r\n        </button>\r\n      )}\r\n      {/* Notifications for Surgeon */}\r\n      {user && user.accessLevel === 3 && (\r\n        <button\r\n          style={{ borderRadius: 50 }}\r\n          className=\"btn mt-3\"\r\n          data-triger=\"focus\"\r\n          data-toggle=\"popover\"\r\n          data-placement=\"bottom\"\r\n          title=\"Notifications\"\r\n          data-content={popoverContentSurgeon.join(\"\")}\r\n        >\r\n          <FontAwesomeIcon style={{ fontSize: 35 }} icon={faBell} />\r\n          {patientsWaitingLetterApprovalSurgeon.length > 0 && (\r\n            <span\r\n              style={{ position: \"relative\", left: \"-8px\" }}\r\n              className=\"badge badge-pill badge-danger\"\r\n            >\r\n              {patientsWaitingLetterApprovalSurgeon.length}\r\n            </span>\r\n          )}\r\n        </button>\r\n      )}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Notifications;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserMd } from \"@fortawesome/free-solid-svg-icons\";\r\nimport Notifications from \"./notification\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  const convertUsername = (username) => {\r\n    const converted = username.replace(\r\n      username.charAt(0),\r\n      username.charAt(0).toUpperCase()\r\n    );\r\n    return converted;\r\n  };\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light col-12 shadow\">\r\n      <NavLink className=\"navbar-brand\" to=\"/\">\r\n        <FontAwesomeIcon\r\n          className=\"text-info ml-3\"\r\n          style={{ fontSize: 50 }}\r\n          icon={faUserMd}\r\n        />\r\n        <span style={{ fontSize: 20 }} className=\"badge badge-info\">\r\n          Docs\r\n        </span>\r\n      </NavLink>\r\n      <Notifications />\r\n      <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarText\"\r\n        aria-controls=\"navbarText\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n      >\r\n        <span className=\"navbar-toggler-icon\" />\r\n      </button>\r\n      <div className=\"collapse navbar-collapse mt-3\" id=\"navbarText\">\r\n        {!user && (\r\n          <React.Fragment>\r\n            <div\r\n              style={{ marginLeft: \"auto\" }}\r\n              className=\"d-flex justify-content-end \"\r\n            >\r\n              <NavLink\r\n                className=\"btn btn-outline-info my-2 my-sm-0\"\r\n                to=\"/login\"\r\n              >\r\n                Login\r\n              </NavLink>\r\n              <NavLink\r\n                className=\"btn btn-outline-info my-2 my-sm-0 ml-3 mr-3\"\r\n                to=\"/register\"\r\n              >\r\n                Register\r\n              </NavLink>\r\n            </div>\r\n          </React.Fragment>\r\n        )}\r\n        {user && (\r\n          <div\r\n            style={{ marginLeft: \"auto\" }}\r\n            className=\"d-flex justify-content-end\"\r\n          >\r\n            <NavLink className=\"text-info my-2 p-2 my-sm-0\" to=\"/username\">\r\n              {convertUsername(user.login.username)}\r\n            </NavLink>\r\n            <NavLink\r\n              className=\"btn btn-outline-info my-2 my-sm-0 ml-3 mr-3\"\r\n              to=\"/logout\"\r\n            >\r\n              Logout\r\n            </NavLink>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nclass RegisterForm extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"col-xl-5 col-lg-7 col-md-8 col-sm-10 col-12 mt-5 mx-auto text-dark\">\r\n        <form\r\n          style={{ padding: \"80px 50px\" }}\r\n          className=\"bg-light rounded shadow border\"\r\n        >\r\n          <h3 className=\"text-center mb-3\">Register</h3>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"confirmpassword\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password2\"\r\n              className=\"form-control\"\r\n              id=\"confirmpassword\"\r\n              placeholder=\"Password Again\"\r\n            />\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"remember\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"remember\">\r\n              I accept terms and conditions\r\n            </label>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n              toast.error(\r\n                \"This feature is not available in prototype version.\"\r\n              );\r\n            }}\r\n            className=\"btn btn-outline-info float-right mb-3\"\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","import React, { Component } from \"react\";\r\nimport { authService } from \"./../services/authService\";\r\n\r\nclass LoginForm extends Component {\r\n  state = {\r\n    user: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    authService(this.state.user);\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const user = { ...this.state.user };\r\n    user[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ user });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-xl-5 col-lg-7 col-md-8 col-sm-10 col-12 mt-5 text-dark mx-auto\">\r\n        <form\r\n          style={{ padding: \"80px 50px\" }}\r\n          className=\"bg-light rounded shadow border\"\r\n        >\r\n          <h3 className=\"text-center\">LogIn</h3>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input\r\n              onChange={this.onChange}\r\n              type=\"email\"\r\n              name=\"email\"\r\n              className=\"form-control\"\r\n              id=\"email\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              Email that you have used while registration.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              onChange={this.onChange}\r\n              type=\"password\"\r\n              name=\"password\"\r\n              className=\"form-control\"\r\n              id=\"password\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"remember\"\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"remember\">\r\n              Remember me\r\n            </label>\r\n            <button\r\n              onClick={this.onSubmit}\r\n              type=\"submit\"\r\n              className=\"btn btn-outline-info float-right mb-3\"\r\n            >\r\n              Login\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;\r\n","import { css } from \"@emotion/core\";\r\n\r\nexport const override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  width: 40px;\r\n  height: 40px;\r\n`;\r\n","import React from \"react\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport $ from \"jquery\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport * as style from \"../style\";\r\n\r\n$(document).ready(function () {\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n});\r\n\r\nconst TableUsers = () => {\r\n  //Users from the store\r\n  const users = useSelector((state) => state.entities.users);\r\n\r\n  //Loading\r\n  let loading = true;\r\n  loading = users.loading;\r\n\r\n  //Coppy to clipboard\r\n  const onCoppy = (title, value) => {\r\n    toast.success(`${title}: ${value} coppied to clipboard!`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mt-5 mr-2 ml-2\">\r\n        <table className=\"table table-bordered\">\r\n          <thead className=\"thead-light\">\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Full Name</th>\r\n              <th scope=\"col\">Job title</th>\r\n              <th scope=\"col\">Username</th>\r\n              <th scope=\"col\">Email</th>\r\n              <th scope=\"col\">Password</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.list.map((user) => {\r\n              return (\r\n                <tr key={user.id}>\r\n                  <td>\r\n                    <a href={user.picture.large}>\r\n                      <img\r\n                        className=\"rounded border shadow mx-auto d-block\"\r\n                        src={user.picture.large}\r\n                        alt={user.name.first + \"'s picture\"}\r\n                      />\r\n                    </a>\r\n                  </td>\r\n                  <td>{user.name.first + \" \" + user.name.last}</td>\r\n                  <td>{user.jobTitle}</td>\r\n                  <td>{user.login.username}</td>\r\n                  <td>\r\n                    <CopyToClipboard text={user.email}>\r\n                      <button\r\n                        className=\"btn btn-sm btn-info\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Coppy to clipboard!\"\r\n                        onClick={() => onCoppy(\"Email\", user.email)}\r\n                      >\r\n                        {user.email}\r\n                      </button>\r\n                    </CopyToClipboard>\r\n                  </td>\r\n                  <td>\r\n                    <CopyToClipboard text={user.login.password}>\r\n                      <button\r\n                        className=\"btn btn-sm btn-info\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Coppy to clipboard!\"\r\n                        onClick={() => onCoppy(\"Password\", user.login.password)}\r\n                      >\r\n                        {user.login.password}\r\n                      </button>\r\n                    </CopyToClipboard>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {loading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <ClipLoader\r\n              css={style.override}\r\n              size={150}\r\n              color={\"#123abc\"}\r\n              loading={loading}\r\n            />\r\n            Loadig...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default TableUsers;\r\n","import React from \"react\";\r\nimport LoginForm from \"./loginForm\";\r\nimport TableUsers from \"./tableUsers\";\r\n\r\nconst Login = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <LoginForm />\r\n      <TableUsers />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport ReactImageAppear from \"react-image-appear\";\r\nimport { faGithub, faReact } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst HomePageDescription = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1 className=\"alert-info text-center text-dark mt-3 mb-5 pt-3 pb-5 rounded shadow\">\r\n        Welcome to Docs\r\n      </h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-12 col-xlg-6 d-flex justify-content-center\">\r\n          <ReactImageAppear src=\"https://image.freepik.com/free-vector/doctors-concept-illustration_114360-1515.jpg\" />\r\n        </div>\r\n        <div className=\"col-12 col-xlg-6 \">\r\n          <h2 className=\"text-center text-secondary mt-5\">\r\n            What is all about?\r\n          </h2>\r\n          <p\r\n            className=\" m-4 p-5 mx-auto border shadow rounded\"\r\n            style={{ maxWidth: 800, fontSize: 23 }}\r\n          >\r\n            Docs is a hospital document system. It allows the nurses to create\r\n            discharging letters for patients, and after the head nurse and\r\n            surgeon approved the document to be download, and the patient can be\r\n            discharged.\r\n            <br />\r\n            <br />\r\n            <span className=\"p-2 aler alert-secondary rounded\">\r\n              <FontAwesomeIcon icon={faGithub} /> GitHub repository:\r\n              <Link\r\n                className=\"ml-2\"\r\n                to=\"https://github.com/YordanovDnA/Docs-system\"\r\n              >\r\n                click\r\n              </Link>\r\n              .\r\n            </span>\r\n            <br />\r\n            <br />\r\n            To test the application you can use some of the users provided from\r\n            the table on the <a href=\"/login\">Login</a> page.\r\n            <br />\r\n            <br />\r\n            <div className=\"alert alert-success p-2 text-dark\">\r\n              <strong>Steps:</strong>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                1. Log in with one of the nurses.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                2. Create a new discharging letter for a patient.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                3. Log out and log in with the head nurse.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                4. Update the letter, and approve it.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                5. Log out and log in with the surgeon.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                6. Update the letter, and approve it.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                7. Log out and log in with a nurse again.\r\n              </span>\r\n              <span className=\"ml-2 mt-2 d-block\">\r\n                8. You can now see the document, download it, and discharge the\r\n                patient.\r\n              </span>\r\n            </div>\r\n            <hr />\r\n            <div style={{ fontSize: 16 }}>\r\n              Developed using <FontAwesomeIcon color=\"#5FD1F7\" icon={faReact} />\r\n              React.\r\n            </div>\r\n            <div style={{ fontSize: 16 }}>\r\n              <span>Developer:</span>\r\n              <Link to=\"http://iliyanyordanov.com\">ILIYAN YORDANOV</Link>\r\n            </div>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default HomePageDescription;\r\n","import React, { Component } from \"react\";\r\nimport HomePageDescription from \"./homePageDescription\";\r\n\r\nclass HomePage extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <HomePageDescription />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","const Logout = () => {\r\n  localStorage.removeItem(\"jwt\");\r\n  window.location.replace(\"/\");\r\n};\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport ReactImageAppear from \"react-image-appear\";\r\n\r\nclass NoMatch extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\" col-md-5 mx-auto mt-5\">\r\n          <ReactImageAppear\r\n            className=\"w-100\"\r\n            src=\"https://image.freepik.com/free-vector/error-404-concept-illustration_114360-1811.jpg\"\r\n          />\r\n        </div>\r\n        <h1 className=\"text-center\">Ups...something wrong. Not such a page.</h1>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NoMatch;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { dischargePatient } from \"../store/patients\";\r\nimport { getUser } from \"../services/authService\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport * as style from \"../style\";\r\n\r\n//jQuery for tooltip\r\n$(document).ready(function () {\r\n  $('[data-toggle=\"tooltip\"]').tooltip();\r\n});\r\n\r\nconst PatientsTable = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  //Get patients from the store\r\n  const patients = useSelector((state) => state.entities.patients);\r\n  const patientsInHouse = patients.list.filter(\r\n    (patient) => !patient.discharging.discharged\r\n  );\r\n\r\n  //Get the user\r\n  const { accessLevel } = getUser();\r\n\r\n  //Loading\r\n  let loading = true;\r\n  loading = patients.loading;\r\n\r\n  //On discharge\r\n  const onDischarge = (id) => {\r\n    dispatch(dischargePatient(id));\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">\r\n                <Link to=\"/addPatient\" className=\"btn btn-sm btn-success\">\r\n                  Add new\r\n                </Link>\r\n              </th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Age</th>\r\n              <th scope=\"col\">Gender</th>\r\n              <th scope=\"col\">Discharging</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {patientsInHouse.map((patient) => {\r\n              return (\r\n                <tr key={patient.id}>\r\n                  <th scope=\"row\">\r\n                    <img\r\n                      src={patient.picture.large}\r\n                      alt={`Patient ${patient.name.first}`}\r\n                    />\r\n                  </th>\r\n                  <td>\r\n                    {\r\n                      <Link to={`/patient/${patient.id}`}>\r\n                        {patient.name.first + \" \" + patient.name.last}\r\n                        {accessLevel < 2 &&\r\n                          patient.discharging.letterApproved &&\r\n                          !patient.discharging.discharged && (\r\n                            <span className=\"ml-2 badge badge-pill badge-danger\">\r\n                              Ready for discharge\r\n                            </span>\r\n                          )}\r\n                      </Link>\r\n                    }\r\n                  </td>\r\n                  <td>{patient.dob.age}</td>\r\n                  <td>{patient.gender}</td>\r\n                  <td>\r\n                    {/* Create new letter - The first stage of discharging process */}\r\n                    {accessLevel < 2 && !patient.discharging.dischargeLetter && (\r\n                      <Link\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Click to create discharging letter!\"\r\n                        className=\"btn btn-sm btn-info\"\r\n                        to={`/newLetter/${patient.id}`}\r\n                      >\r\n                        New letter\r\n                      </Link>\r\n                    )}\r\n\r\n                    {/* Discharging process status- waiting the head nurce and surgeon to approve the letter */}\r\n                    {patient.discharging.inProcess && accessLevel < 2 ? (\r\n                      <React.Fragment>\r\n                        <span\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Waiting the document to be signed!\"\r\n                          className=\"badge badge-warning p-2\"\r\n                        >\r\n                          In process\r\n                        </span>\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {/* Letter waiting approval - Head nurse */}\r\n                    {accessLevel === 2 &&\r\n                    patient.discharging.dischargeLetter &&\r\n                    !patient.discharging.letter.headNurseApproved ? (\r\n                      <Link\r\n                        to={`/newLetter/${patient.id}`}\r\n                        className=\"btn btn-sm btn-success mt-2\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Waiting for your approval\"\r\n                      >\r\n                        Approve letter\r\n                      </Link>\r\n                    ) : null}\r\n\r\n                    {accessLevel === 2 &&\r\n                    patient.discharging.letter.headNurseApproved &&\r\n                    !patient.discharging.letter.surgeonApproved ? (\r\n                      <React.Fragment>\r\n                        <span\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Waiting the document to be signed!\"\r\n                          className=\"badge badge-warning p-2\"\r\n                        >\r\n                          Waiting surgeon to approved\r\n                        </span>\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {/* Letter waiting approval - Surgeon */}\r\n                    {accessLevel > 2 &&\r\n                    patient.discharging.dischargeLetter &&\r\n                    !patient.discharging.letter.surgeonApproved &&\r\n                    patient.discharging.letter.headNurseApproved ? (\r\n                      <Link\r\n                        to={`/newLetter/${patient.id}`}\r\n                        className=\"btn btn-sm btn-success mt-2\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Waiting for your approval!\"\r\n                      >\r\n                        Approve letter\r\n                      </Link>\r\n                    ) : null}\r\n\r\n                    {accessLevel === 3 &&\r\n                    patient.discharging.dischargeLetter &&\r\n                    !patient.discharging.letter.headNurseApproved &&\r\n                    !patient.discharging.letter.surgeonApproved ? (\r\n                      <React.Fragment>\r\n                        <span\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Waiting the document to be signed!\"\r\n                          className=\"badge badge-warning p-2\"\r\n                        >\r\n                          Waiting head nurce to approved\r\n                        </span>\r\n                        <br />\r\n                      </React.Fragment>\r\n                    ) : null}\r\n\r\n                    {accessLevel > 1 &&\r\n                      patient.discharging.letterApproved &&\r\n                      !patient.discharging.discharged && (\r\n                        <span\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Waiting to be discharged from the nurce!\"\r\n                          className=\"badge badge-warning p-2\"\r\n                        >\r\n                          Waiting for discharge\r\n                        </span>\r\n                      )}\r\n\r\n                    {/* Letter approved - this is showed when the patient letter has been approved and the patient can be discharged.  */}\r\n                    {accessLevel < 2 && patient.discharging.letterApproved && (\r\n                      <React.Fragment>\r\n                        <Link\r\n                          className=\"btn btn-sm btn-info\"\r\n                          to={`/letterPreview/${patient.id}`}\r\n                        >\r\n                          See letter\r\n                        </Link>\r\n                        <br />\r\n                        <button\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Discharge the patient!\"\r\n                          onClick={() => onDischarge(patient.id)}\r\n                          className=\"btn btn-sm btn-success mt-2\"\r\n                        >\r\n                          Discharge\r\n                        </button>\r\n                      </React.Fragment>\r\n                    )}\r\n\r\n                    {accessLevel > 1 && !patient.discharging.dischargeLetter && (\r\n                      <React.Fragment>\r\n                        <span\r\n                          data-toggle=\"tooltip\"\r\n                          data-placement=\"bottom\"\r\n                          title=\"Waiting the letter to be created from the nurce!\"\r\n                          className=\"badge badge-info p-2\"\r\n                        >\r\n                          No letter\r\n                        </span>\r\n                        <br />\r\n                      </React.Fragment>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n\r\n        {/* Loading bar */}\r\n        {loading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <ClipLoader\r\n              css={style.override}\r\n              size={150}\r\n              color={\"17A2B8\"}\r\n              loading={loading}\r\n            />\r\n            Loading...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientsTable;\r\n","import React from \"react\";\r\n\r\nconst AddPatient = () => {\r\n  return (\r\n    <div className=\"alert alert-danger m-5\" role=\"alert\">\r\n      This function is still not available!\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddPatient;\r\n","import React from \"react\";\r\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector } from \"react-redux\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport * as style from \"../style\";\r\n\r\nconst Colegues = () => {\r\n  //Get colegues\r\n  const colegues = useSelector((state) => state.entities.users);\r\n\r\n  //Loading\r\n  let loading = true;\r\n  loading = colegues.loading;\r\n\r\n  //Coppy to clipboard\r\n  const onCoppy = (title, value) => {\r\n    toast.success(`${title}: ${value} coppied to clipboard!`);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Job Title</th>\r\n              <th scope=\"col\">Email</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {colegues.list.map((colegue) => {\r\n              return (\r\n                <tr key={colegue.id}>\r\n                  <th scope=\"row\">\r\n                    <img src={colegue.picture.large} alt={colegue.name.first} />\r\n                  </th>\r\n                  <td>\r\n                    <strong>\r\n                      {colegue.name.first + \" \" + colegue.name.last}\r\n                    </strong>\r\n                  </td>\r\n                  <td>{colegue.jobTitle}</td>\r\n                  <td>\r\n                    <CopyToClipboard text={colegue.email}>\r\n                      <button\r\n                        className=\"btn btn-sm btn-info\"\r\n                        data-toggle=\"tooltip\"\r\n                        data-placement=\"bottom\"\r\n                        title=\"Coppy to clipboard!\"\r\n                        onClick={() => onCoppy(\"Email\", colegue.email)}\r\n                      >\r\n                        {colegue.email}\r\n                      </button>\r\n                    </CopyToClipboard>\r\n                  </td>\r\n                  <td>\r\n                    <button\r\n                      onClick={() =>\r\n                        toast.error(\"This function is still not available!\")\r\n                      }\r\n                      className=\"btn btn-info\"\r\n                    >\r\n                      Message\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {loading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <ClipLoader\r\n              css={style.override}\r\n              size={150}\r\n              color={\"#123abc\"}\r\n              loading={loading}\r\n            />\r\n            Loading...\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Colegues;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\nimport * as style from \"../style\";\r\n\r\nconst Archive = () => {\r\n  const patients = useSelector((state) => state.entities.patients.list);\r\n  const dischargedPatients = patients.filter(\r\n    (patient) => patient.discharging.discharged\r\n  );\r\n\r\n  const loading = useSelector((state) => state.entities.patients.loading);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"table-responsive\">\r\n        <table className=\"table table-bordered\">\r\n          <thead>\r\n            <tr>\r\n              <th scope=\"col\">#</th>\r\n              <th scope=\"col\">Name</th>\r\n              <th scope=\"col\">Age</th>\r\n              <th scope=\"col\">Gender</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {dischargedPatients.map((patient) => {\r\n              return (\r\n                <tr key={patient.id}>\r\n                  <th scope=\"row\">\r\n                    <img\r\n                      src={patient.picture.large}\r\n                      alt={`Patient ${patient.name.first}`}\r\n                    />\r\n                  </th>\r\n                  <td>\r\n                    {\r\n                      <Link to={`/patient/${patient.id}`}>\r\n                        {patient.name.first + \" \" + patient.name.last}\r\n                      </Link>\r\n                    }\r\n                  </td>\r\n                  <td>{patient.dob.age}</td>\r\n                  <td>{patient.gender}</td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </table>\r\n        {loading && (\r\n          <div style={{ textAlign: \"center\" }}>\r\n            <ClipLoader\r\n              css={style.override}\r\n              size={150}\r\n              color={\"17A2B8\"}\r\n              loading={loading}\r\n            />\r\n            Loading...\r\n          </div>\r\n        )}\r\n        {!loading && dischargedPatients.length < 1 && (\r\n          <div className=\"alert alert-info\" role=\"alert\">\r\n            There is nothing to show!\r\n          </div>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Archive;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Note extends Component {\r\n  state = {\r\n    note: {\r\n      title: \"\",\r\n      body: \"\",\r\n    },\r\n  };\r\n\r\n  onChange = (e) => {\r\n    const note = { ...this.state.note };\r\n    note[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ note });\r\n  };\r\n\r\n  render() {\r\n    const { uuid, onClick } = this.props;\r\n    return (\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"title\">Add a note:</label>\r\n          <input\r\n            onChange={this.onChange}\r\n            name=\"title\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"title\"\r\n            placeholder=\"Title\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            onChange={this.onChange}\r\n            className=\"form-control\"\r\n            name=\"body\"\r\n            id=\"\"\r\n            cols=\"30\"\r\n            rows=\"10\"\r\n          ></textarea>\r\n        </div>\r\n        <div className=\"d-flex justify-content-end\">\r\n          <button\r\n            onClick={() => onClick(uuid, this.state.note)}\r\n            className=\"btn btn-outline-info\"\r\n            type=\"button\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Note;\r\n","import React from \"react\";\r\n\r\nconst PatientNotes = ({ notes }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"mt-2\">\r\n        <div id=\"accordianId\" role=\"tablist\" aria-multiselectable=\"true\">\r\n          {notes &&\r\n            notes.map((note) => {\r\n              return (\r\n                <div key={note.title} className=\"card\">\r\n                  <div className=\"card-header\" role=\"tab\" id=\"section2HeaderId\">\r\n                    <h5 className=\"mb-0\">\r\n                      <a\r\n                        data-toggle=\"collapse\"\r\n                        data-parent=\"#accordianId\"\r\n                        href=\"#section2ContentId\"\r\n                        aria-expanded=\"true\"\r\n                        aria-controls=\"section2ContentId\"\r\n                      >\r\n                        {note.title}\r\n                      </a>\r\n                    </h5>\r\n                  </div>\r\n                  <div\r\n                    id=\"section2ContentId\"\r\n                    className=\"collapse in\"\r\n                    role=\"tabpanel\"\r\n                    aria-labelledby=\"section2HeaderId\"\r\n                  >\r\n                    <div className=\"card-body\">\r\n                      {note.body}\r\n                      <p className=\"text-muted\">{`- Added by ${note.addedBy}`}</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientNotes;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst PatientCardInfo = ({ patient }) => {\r\n  console.log(patient);\r\n  const { id, name, picture, gender, age, location } = patient;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"col\">\r\n        <img className=\" mt-2\" src={picture.large} alt=\"\" />\r\n        <h5 className=\"card-title  mt-2\">\r\n          {name.title + \" \" + name.first + \" \" + name.last}\r\n        </h5>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">Gender: {gender}</h6>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">Age: {age}</h6>\r\n        <h6 className=\"card-subtitle mb-2 text-muted\">Address:</h6>\r\n        <p className=\"card-text\">\r\n          {location.street.number}, {location.street.name} <br />\r\n          {location.city},{location.country} <br />\r\n          {location.postcode}\r\n        </p>\r\n        {patient.discharging.letterApproved && (\r\n          <Link className=\"btn btn-sm btn-info\" to={`/letterPreview/${id}`}>\r\n            See letter\r\n          </Link>\r\n        )}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientCardInfo;\r\n","import React from \"react\";\r\nimport Note from \"./note\";\r\nimport PatientNotes from \"./patientNotes\";\r\nimport PatientCardInfo from \"./patientCardInfo\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst PatientCard = (props) => {\r\n  //Getting patients\r\n  const patients = useSelector((state) => state.entities.patients.list);\r\n\r\n  //Getting patient\r\n  const { id } = props.match.params;\r\n  const index = patients.findIndex((patient) => patient.id === id);\r\n  const patient = patients[index];\r\n\r\n  //Object destructuring\r\n  const { notes } = patient;\r\n\r\n  //Handle note submit\r\n  const handleNoteSubmit = (id, note) => {\r\n    console.log(\"Submit\");\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"card mx-auto mt-5\"\r\n        style={{ minWidth: \"18rem\", maxWidth: \"50rem\", width: \"100%\" }}\r\n      >\r\n        <div className=\"card-body row\">\r\n          {/* Patient Information on the card */}\r\n          <PatientCardInfo patient={patient} />\r\n          <div className=\"col-md-8\">\r\n            {/* New note form  */}\r\n            <Note uuid={id} onClick={handleNoteSubmit} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* Rendering all patient notes */}\r\n      <PatientNotes notes={notes} />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default PatientCard;\r\n","import { values } from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { getUser } from \"../services/authService\";\r\nimport { toast } from \"react-toastify\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addDischargingLetter,\r\n  headNurceApprove,\r\n  surgeonApprove,\r\n} from \"./../store/patients\";\r\n\r\nclass DischargingLetter extends Component {\r\n  state = {\r\n    letter: {\r\n      patientName: \"\",\r\n      date: \"\",\r\n      body: \"\",\r\n      createdBy: \"\",\r\n      headNurseApproved: false,\r\n      surgeonApproved: false,\r\n      signedBy: [],\r\n    },\r\n    id: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const patients = this.props.patients;\r\n    const patient = patients.find((patient) => patient.id === id);\r\n    const { accessLevel, jobTitle } = getUser();\r\n    const { createdBy, body } = patient.discharging.letter;\r\n\r\n    // const patient = getPatient(id);\r\n    const letter = { ...this.state.letter };\r\n\r\n    //Get the patient name\r\n    const patientName = values(patient.name).join(\" \");\r\n\r\n    //Update the letter info\r\n    letter.patientName = patientName;\r\n\r\n    if (accessLevel < 2) {\r\n      const createdBy = values(getUser().name).join(\" \");\r\n      letter.body = `Dear ${patientName},\\n\\nToday ${new Date().getUTCDate()}/${\r\n        new Date().getUTCMonth() + 1\r\n      }/${new Date().getUTCFullYear()}, we are discharging you from [Hospital name].\\n\\n[Some information about the following days]\\n\\nDiagnose:\\n\\n[Write the diagnose of the patient here]\\n\\n Additional information:\\n\\n [Write any additional information for the patient]`;\r\n      letter.createdBy = createdBy + \" - \" + jobTitle;\r\n    } else {\r\n      letter.body = body;\r\n      letter.createdBy = createdBy;\r\n    }\r\n\r\n    //Update the state\r\n    this.setState({ letter });\r\n  }\r\n\r\n  //Update the state on change\r\n  onChange = (e) => {\r\n    const letter = { ...this.state.letter };\r\n    letter[e.currentTarget.name] = e.currentTarget.value;\r\n    this.setState({ letter });\r\n  };\r\n\r\n  //Submit the discharging letter\r\n  submitLetter = (e) => {\r\n    e.preventDefault();\r\n    const { id } = this.props.match.params;\r\n    const discharging = {\r\n      letter: { ...this.state.letter },\r\n      inProcess: true,\r\n      dischargeLetter: true,\r\n      letterApproved: false,\r\n      discharged: false,\r\n    };\r\n\r\n    this.props.addDischargingLetter(id, discharging);\r\n\r\n    this.props.history.replace(`/patients`);\r\n    toast.success(\r\n      `${this.state.letter.patientName} letter has been send for approval. `\r\n    );\r\n  };\r\n\r\n  //Approve discharging letter\r\n  approveLetter = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Approved\");\r\n    const { id } = this.props.match.params;\r\n    const user = getUser();\r\n    const discharging = {\r\n      letter: { ...this.state.letter },\r\n      inProcess: true,\r\n      dischargeLetter: true,\r\n      letterApproved: false,\r\n      discharged: false,\r\n    };\r\n    const signedBy = values(user.name).join(\" \") + \" - \" + user.jobTitle;\r\n    if (user.accessLevel === 2)\r\n      this.props.headNurceApprove(id, discharging, signedBy);\r\n    if (user.accessLevel === 3)\r\n      this.props.surgeonApprove(id, discharging, signedBy);\r\n    this.props.history.replace(\"/patients\");\r\n  };\r\n\r\n  render() {\r\n    const { createdBy, body, signedBy } = this.state.letter;\r\n    const { accessLevel } = getUser();\r\n    return (\r\n      <div>\r\n        <form className=\"col-md-6 mx-auto mt-5 border shadow pt-5 pb-5 pl-3 pr-3\">\r\n          <div className=\"mb-2\">\r\n            <h4\r\n              style={{ fontWeight: \"lighter\" }}\r\n              className=\"text-center text-muted\"\r\n            >\r\n              Discharging letter\r\n            </h4>\r\n            <p className=\"text-right\">\r\n              National Health Service <br /> [Hospital name] <br /> [Hospital\r\n              address] <br />\r\n              [Hospital contact information]\r\n            </p>\r\n          </div>\r\n          <hr />\r\n          <div className=\"form-group mt-5 mb-5\">\r\n            <textarea\r\n              defaultValue={body}\r\n              autoFocus={true}\r\n              onChange={this.onChange}\r\n              className=\"form-control\"\r\n              name=\"body\"\r\n              cols=\"30\"\r\n              rows=\"13\"\r\n            ></textarea>\r\n          </div>\r\n          <hr />\r\n          <div className=\"pl-2 pr-2 row\">\r\n            <div className=\" col-6\">\r\n              Yours sincerely, <br />\r\n              {createdBy}\r\n            </div>\r\n            <div className=\"text-right col-6\">\r\n              {signedBy[0] && signedBy[1]\r\n                ? \"Signed by:\"\r\n                : \"**Document is not signed**\"}{\" \"}\r\n              <br /> {signedBy[0] ? signedBy[0] : \"[head nurse]\"}\r\n              <br /> {signedBy[1] ? signedBy[1] : \"[surgeon]\"}\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button\r\n              onClick={accessLevel < 2 ? this.submitLetter : this.approveLetter}\r\n              className=\"btn btn-sm btn-primary\"\r\n            >\r\n              {accessLevel < 2 ? \"Save\" : \"Aprove\"}\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = function (state) {\r\n  return {\r\n    patients: state.entities.patients.list,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addDischargingLetter: (id, discharging) =>\r\n    dispatch(addDischargingLetter(id, discharging)),\r\n\r\n  headNurceApprove: (id, discharging, signedBy) =>\r\n    dispatch(headNurceApprove(id, discharging, signedBy)),\r\n\r\n  surgeonApprove: (id, discharging, signedBy) =>\r\n    dispatch(surgeonApprove(id, discharging, signedBy)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DischargingLetter);\r\n","import React from \"react\";\r\nimport {\r\n  Page,\r\n  Text,\r\n  View,\r\n  Document,\r\n  StyleSheet,\r\n  PDFDownloadLink,\r\n} from \"@react-pdf/renderer\";\r\n\r\n// Create styles\r\nconst styles = StyleSheet.create({\r\n  page: {\r\n    backgroundColor: \"white\",\r\n  },\r\n  heading: {\r\n    fontSize: 23,\r\n    textAlign: \"center\",\r\n    marginTop: 50,\r\n    marginBottom: 20,\r\n  },\r\n  headingText: {\r\n    fontSize: 12,\r\n    textAlign: \"right\",\r\n    margin: 10,\r\n    padding: 10,\r\n  },\r\n  mainText: {\r\n    borderTop: 1,\r\n    borderBottom: 1,\r\n    flexGrow: 1,\r\n    margin: 10,\r\n    padding: 30,\r\n    fontSize: 14,\r\n  },\r\n  footerText: {\r\n    textAlign: \"right\",\r\n    fontSize: 12,\r\n    marginLeft: 20,\r\n    marginRight: 20,\r\n  },\r\n});\r\n\r\n// Create the letter to PDF\r\nconst LetterToPdf = ({ letter, signedBy }) => {\r\n  console.log(\"Document\", letter, signedBy);\r\n  return (\r\n    <Document title={`DSLetter-${new Date()}`}>\r\n      <Page size=\"A4\" style={styles.page}>\r\n        <View style={styles.sectionTop}>\r\n          <Text style={styles.heading}>Discharging letter</Text>\r\n          <Text\r\n            style={styles.headingText}\r\n          >{`National Health Service\\n[Hospital Name]\\n[Hospitaladdress]\\n[Hospital contact indormation]`}</Text>\r\n          <Text style={styles.mainText}>\r\n            {`${letter.body}\\n\\nYours sinciraly,\\n${letter.createdBy}`}\r\n          </Text>\r\n        </View>\r\n        <Text style={styles.footerText}>\r\n          {`Signed by:\\n${signedBy[0]}\\n${signedBy[1]}`}\r\n        </Text>\r\n      </Page>\r\n    </Document>\r\n  );\r\n};\r\n\r\n//Render the pomponent with download link\r\nconst DownloadPDFLetter = ({ letter, signedBy }) => {\r\n  console.log(\"Letter\", letter, \"SignedBy\", signedBy);\r\n  return (\r\n    <React.Fragment>\r\n      <PDFDownloadLink\r\n        className=\"btn btn-sm btn-info\"\r\n        document={<LetterToPdf letter={letter} signedBy={signedBy} />}\r\n        fileName=\"Test\"\r\n      >\r\n        Download\r\n      </PDFDownloadLink>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default DownloadPDFLetter;\r\n","import React from \"react\";\r\nimport DownloadPDFLetter from \"./letterToPDF\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst LetterPreview = (props) => {\r\n  //Get patients\r\n  const patients = useSelector((state) => state.entities.patients);\r\n  //Get letter & signedBy\r\n  const { id } = props.match.params;\r\n  const patient = patients.list.find((patient) => patient.id === id);\r\n  const letter = patient.discharging.letter;\r\n  const { body, createdBy, signedBy } = letter;\r\n\r\n  let renderDownloadFile = (\r\n    <DownloadPDFLetter letter={letter} signedBy={signedBy} />\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"col-md-6 mx-auto mt-5 border shadow pt-5 pb-5 pl-3 pr-3\">\r\n        <div className=\"mb-2\">\r\n          <h4\r\n            style={{ fontWeight: \"lighter\" }}\r\n            className=\"text-center text-muted\"\r\n          >\r\n            Discharging letter\r\n          </h4>\r\n          <p className=\"text-right\">\r\n            National Health Service <br />\r\n            [Hospital name] <br />\r\n            [Hospital address] <br />\r\n            [Hospital contact information]\r\n          </p>\r\n        </div>\r\n        <hr />\r\n        <div className=\"form-group mt-5 mb-5\">\r\n          <textarea\r\n            disabled\r\n            defaultValue={body}\r\n            autoFocus={true}\r\n            className=\"form-control\"\r\n            name=\"body\"\r\n            cols=\"30\"\r\n            rows=\"13\"\r\n          ></textarea>\r\n        </div>\r\n        <hr />\r\n        <div className=\"pl-2 pr-2 row\">\r\n          <div className=\" col-6\">\r\n            Yours sincerely, <br />\r\n            {createdBy}\r\n          </div>\r\n          <div className=\"text-right col-6\">\r\n            {signedBy[0]}\r\n            <br />\r\n            {signedBy[1]}\r\n          </div>\r\n        </div>\r\n        <hr />\r\n        {/* Rendering the DownloadPDFLetter */}\r\n        <div className=\"d-flex justify-content-end\">\r\n          {renderDownloadFile ? renderDownloadFile : \"null\"}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LetterPreview;\r\n","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { getUser } from \"./../services/authService\";\r\n\r\nconst ProtectedRoute = ({ component: Component, render, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (!getUser()) return <Redirect to=\"/login\" />;\r\n        return Component ? <Component {...props} /> : render(props);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { Component } from \"react\";\nimport configureStore from \"./store/configureStore\";\nimport { Provider } from \"react-redux\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { ToastContainer, Zoom } from \"react-toastify\";\nimport Navigation from \"./components/navigation\";\nimport NavBar from \"./components/navBar\";\nimport RegisterForm from \"./components/registerForm\";\nimport Login from \"./components/login\";\nimport HomePage from \"./components/homePage\";\nimport Logout from \"./components/logout\";\nimport NoMatch from \"./components/404page\";\nimport PatientsTable from \"./components/patientsTable\";\nimport AddPatient from './components/addPatient';\nimport Colegues from \"./components/colegues\";\nimport Archive from \"./components/archive\";\nimport PatientCard from \"./components/patientCard\";\nimport DischargingLetter from \"./components/dischargingLetter\";\nimport LetterPreview from \"./components/letterPreview\";\nimport ProtectedRoute from \"./components/protectedRoute\";\nimport { getUser } from \"./services/authService\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\nimport { loadPatients } from \"./store/patients\";\nimport { loadUsers } from \"./store/users\";\n\nconst store = configureStore();\n\nclass App extends Component {\n  state = {\n    user: null,\n  };\n\n  componentDidMount() {\n    store.dispatch(loadUsers());\n    const user = getUser();\n    if (user) {\n      this.setState({ user });\n      setInterval(() => {\n        store.dispatch(loadPatients());\n      }, 2000);\n    }\n  }\n\n  render() {\n    const { user } = this.state;\n    return (\n      <Provider store={store}>\n        <React.Fragment>\n          <ToastContainer style={{ marginTop: 70 }} transition={Zoom} />\n          <div className=\"row\">\n            <NavBar user={user} />\n            {user && (\n              <React.Fragment>\n                <div className=\"col-lg-2 \">\n                  <Navigation />\n                </div>\n              </React.Fragment>\n            )}\n\n            <div className={user ? \"col-lg-10\" : \"col-12\"}>\n              {/* Declaring routes to the Navigation links \n            from NavBar.jsx and Navigation.jsx */}\n              <Switch>\n                {/* Creating new discharging letter taking patient id as a property. \n              Only showed for nurces except the Head nurce*/}\n                <ProtectedRoute\n                  path=\"/newLetter/:id\"\n                  component={DischargingLetter}\n                />\n                {/* Preview the letter and download it before discharging. \n              Only showed for nurces except the Head nurce*/}\n                <ProtectedRoute\n                  path=\"/letterPreview/:id\"\n                  component={LetterPreview}\n                />\n                <ProtectedRoute path=\"/patient/:id\" component={PatientCard} />\n                <ProtectedRoute path=\"/addPatient\" component={AddPatient} />\n                <ProtectedRoute path=\"/patients\" component={PatientsTable} />\n                <ProtectedRoute path=\"/colegues\" component={Colegues} />\n                <ProtectedRoute path=\"/archive\" component={Archive} />\n                <Route path=\"/logout\" component={Logout} />\n                <Route path=\"/login\" component={Login} />\n                <Route path=\"/register\" component={RegisterForm} />\n                <Route exact path=\"/\" component={HomePage} />\n                <Route path=\"*\" component={NoMatch} />\n              </Switch>\n            </div>\n          </div>\n        </React.Fragment>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\nimport reducer from \"./reducer\";\r\nimport toast from \"./middleware/toast\";\r\nimport api from \"./middleware/api\";\r\n\r\nexport default function () {\r\n  return configureStore({\r\n    reducer,\r\n    middleware: [\r\n      ...getDefaultMiddleware(),\r\n      // logger({ destination: \"console\" }),\r\n      toast,\r\n      api,\r\n    ],\r\n  });\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport \"popper.js/dist/popper\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}